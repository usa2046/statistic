#!/usr/bin/env python
# _*_ coding: utf-8 _*_
# @Author : zhenbei
# @File : timelinepy
# @Time : 2020-03-03 11:41
# pyecharts v1.X

from pyecharts import options as opts
from pyecharts.charts import Bar, Map, Page, Pie, Timeline
from pyecharts.faker import Collector, Faker


def timeline_bar() -> Timeline:
    x = Faker.choose()
    tl = Timeline()
    for i in range(2015, 2020):
        bar1 = (
            Bar()
            .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
            .add_yaxis("数据A", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
            .add_yaxis("数据B", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
            .set_global_opts(title_opts=opts.TitleOpts("地区{}用地数据".format(i)))
        )
        bar2 = (
            Bar()
            .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
            .add_yaxis("数据A", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
            .add_yaxis("数据B", [6.34,741.02,21.11,17.95,1109.16,485.24,362.09,218.01,1243.72])
            .set_global_opts(title_opts=opts.TitleOpts("地区{}用地数据".format(i)))
        )
        tl.add(bar1,bar2)
        tl.add(bar2,'{}年'.format(i))
    return tl
timeline_bar().render()


from pyecharts import options as opts
from pyecharts.charts import Bar, Map, Page, Pie, Timeline
from pyecharts.faker import Collector, Faker


def timeline_bar() -> Timeline:
    x = Faker.choose()
    tl = Timeline()
    bar1 = (
        Bar()
        .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
        .add_yaxis("数据A", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据B", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据c", [14.34, 741.02, 121.11, 317.95, 1109.16, 485.24, 362.09, 218.01, 1243.72])
        .add_yaxis("数据d", [14.34, 741.02, 121.11, 317.95, 1109.16, 485.24, 362.09, 218.01, 1243.72])
        .set_global_opts(title_opts=opts.TitleOpts("地区2015用地数据"))
    )
    bar2 = (
        Bar()
        .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
        .add_yaxis("数据A", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据B", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据c", [1.34, 71.02, 11.11, 37.95, 119.16, 45.24, 32.09, 28.01, 123.72])
        .add_yaxis("数据d", [1.34, 71.02, 11.11, 37.95, 119.16, 45.24, 32.09, 28.01, 123.72])
        .set_global_opts(title_opts=opts.TitleOpts("地区2016用地数据"))
    )
    bar3 = (
        Bar()
        .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
        .add_yaxis("数据A", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据B", [14.34,71.02,121.11,37.95,110.16,485.24,36.09,218.01,124.72])
        .add_yaxis("数据c", [14.34, 741.02, 121.11, 317.95, 1109.16, 485.24, 362.09, 218.01, 1243.72])
        .add_yaxis("数据d", [14.34, 741.02, 121.11, 317.95, 1109.16, 485.24, 362.09, 218.01, 1243.72])
        .set_global_opts(title_opts=opts.TitleOpts("地区2016用地数据"))
    )
    bar4 = (
        Bar()
        .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
        .add_yaxis("数据A", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据B", [14.34,741.02,11.11,317.95,119.16,485.24,362.09,218.01,123.72])
        .add_yaxis("数据c", [14.34, 741.02, 11.11, 317.95, 1109.16, 485.24, 362.09, 218.01, 1243.72])
        .add_yaxis("数据d", [14.34, 741.02, 11.11, 317.95, 1109.16, 485.24, 362.09, 218.01, 1243.72])
        .set_global_opts(title_opts=opts.TitleOpts("地区2016用地数据"))
    )
    bar5 = (
        Bar()
        .add_xaxis(["魏家屯镇", "彭杜乡", "赵家圈镇", "郑家河沿镇", "邓家庄镇", "何庄乡", "大麻森乡", "苏正办事处", "冀州镇"])
        .add_yaxis("数据A", [14.34,741.02,121.11,37.95,1109.16,485.24,362.09,218.01,1243.72])
        .add_yaxis("数据B", [14.34,741.02,121.11,317.95,1109.16,485.24,362.09,28.01,1243.72])
        .add_yaxis("数据c", [14.34, 741.02, 121.11, 317.95, 1109.16, 45.24, 362.09, 21.01, 1243.72])
        .add_yaxis("数据d", [14.34, 741.02, 121.11, 317.95, 1109.16, 45.24, 362.09, 21.01, 1243.72])
        .set_global_opts(title_opts=opts.TitleOpts("地区2016用地数据"))
    )
    tl.add(bar1,"2015年")
    tl.add(bar2,"2016年")
    tl.add(bar3,"2017年")
    tl.add(bar4,"2018年")
    tl.add(bar5,"2019年")
    return tl
timeline_bar().render()
